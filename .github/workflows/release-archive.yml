name: Release Archive Builder

on:
  push:
    tags: [ "v*" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@3
        with:
          submodules: true
          token: ${{ secrets.REPO_TOKEN }}
      - name: Read Manifest
        run: |
          version="$(jq -r '.version_number' ${{env.name}}/Package/${{env.jsonf}})"
          description="$(jq -r '.description' ${{env.name}}/Package/${{env.jsonf}})"
          echo "VERSION=${version}" >> $GITHUB_ENV
          echo "DESCRIPTION=${description}" >> $GITHUB_ENV

      - uses: nuget/setup-nuget@v1
        with:
          nuget-version: '5.x'

      - run: nuget restore ValheimMods.sln

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Navigate to Workspace
        run: cd $GITHUB_WORKSPACE

      - name: Create Build Directory
        run: mkdir _build

      - name: Build Archive
        run: |
          msbuild.exe ValheimRAFT.sln /nologo /nr:false /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release Archive" /p:PublishUrl="../_build"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing its ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./bin/Release/ModVersions/
          asset_name: ValheimRAFT-${{ steps.}}.zip
          asset_content_type: application/zip